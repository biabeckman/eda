import java.util.LinkedList;
import java.util.Scanner;

public class fila_linkedlist {
    public static class Fila {
        private Node head;
        private Node tail;

        private class Node {
            int data;
            Node next;
            Node prev;

            Node(int data) {
                this.data = data;
                this.next = null;
                this.prev = null;
            }
        }

        public boolean isEmpty() {
            return head == null;
        }

        public void add(int elemento) {
            Node newNode = new Node(elemento);
            if (isEmpty()) {
                head = newNode;
                tail = newNode;
            } else {
                tail.next = newNode;
                newNode.prev = tail;
                tail = newNode;
            }
        }

        public int remove() {
            if (isEmpty()) {
                System.out.println("empty");
                return -1;
            }

            int elemento = head.data;
            head = head.next;
            if (head != null) {
                head.prev = null;
            } else {
                tail = null;
            }
            return elemento;
        }

        public int element() {
            if (isEmpty()) {
                System.out.println("empty");
                return -1;
            }
            return head.data;
        }

        public void print() {
            if (isEmpty()) {
                System.out.println("empty");
                return;
            }

            Node current = head;
            while (current != null) {
                System.out.print(current.data + " ");
                current = current.next;
            }
            System.out.println();
        }

        public int search(int elemento) {
            return searchRecursive(head, elemento, 0);
        }

        private int searchRecursive(Node current, int elemento, int index) {
            if (current == null) {
                return -1;
            }

            if (current.data == elemento) {
                return index;
            }

            return searchRecursive(current.next, elemento, index + 1);
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Fila fila = new Fila();

        String operacao;
        while (!(operacao = scanner.nextLine()).equals("end")) {
            String[] partes = operacao.split(" ");
            if (partes[0].equals("add")) {
                int elemento = Integer.parseInt(partes[1]);
                fila.add(elemento);
            } else if (partes[0].equals("remove")) {
                fila.remove();
            } else if (partes[0].equals("element")) {
                fila.element();
            } else if (partes[0].equals("print")) {
                fila.print();
            } else if (partes[0].equals("search")) {
                int elemento = Integer.parseInt(partes[1]);
                int posicao = fila.search(elemento);
                System.out.println(posicao);
            }
        }

        scanner.close();
    }
}
