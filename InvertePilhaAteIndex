import java.util.Scanner;
import java.util.Stack;

public class inverte_pilha_index {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

         // le tamanho da pilha
        int tamanho = sc.nextInt();
        sc.nextLine();
        // le os elementos da pilha
        String[] elementosPilha = sc.nextLine().split(" ");
        //indice até onde a inversao deve ser feita
        int indice = sc.nextInt();

        // cria pilha para armazenar elementos
        Stack<Integer> stack = new Stack<>();

        //o loop para preenche a pilha com elementos ate o indice
        for (String elemento : elementosPilha) {
            //converte o elemento de elementosPilha[i] em um número inteiro
            stack.push(Integer.parseInt(elemento));
        }

        //cria pilha temporaria
        Stack<Integer> tempStack = new Stack<>();
        for(int i = 0; i <= indice; i++){
            //desempilhando os elementos de stack e ordenando em temp até o indice indicado
            tempStack.push(stack.pop());
        }

        System.out.println("-");
        //imprime pilha invertida
        while(!tempStack.isEmpty()){
            System.out.println(tempStack.pop()); // removendo e retornando 
        }

        //imprime o restante da pilha original
        while(!stack.isEmpty()){
            System.out.println(stack.pop());// imprime ow ficou na outra pilha, oq tava dps do indice
        }

        sc.close();
    }
}
