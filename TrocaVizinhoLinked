import java.util.Scanner;

class Node {
    int data;
    Node next;

    public Node(int data) {
        this.data = data;
        this.next = null;
    }
}

class LinkedList {
    Node head;

    public void addLast(int data) {
        Node newNode = new Node(data);
        if (head == null) {
            head = newNode;
        } else {
            Node current = head;
            while (current.next != null) {
                current = current.next;
            }
            current.next = newNode;
        }
    }

    public void swapAdjacentNodes(int index) {
        if (head == null || index < 0) {
            return; // Lista vazia ou índice inválido, nada a fazer.
        }

        if (index == 0 && head.next != null) {
            // Trocar os dois primeiros nós (head e head.next).
            Node temp = head.next;
            head.next = temp.next;
            temp.next = head;
            head = temp;
            return;
        }

        int currentIndex = 0;
        Node current = head;
        while (current != null && currentIndex < index - 1) {
            current = current.next;
            currentIndex++;
        }

        if (current != null && current.next != null && current.next.next != null) {
            // Trocar os nós current.next e current.next.next.
            Node firstNode = current.next;
            Node secondNode = current.next.next;

            current.next = secondNode;
            firstNode.next = secondNode.next;
            secondNode.next = firstNode;
        }
    }
